openapi: 3.0.3
info:
  title: Jibril API
  description: API for managing events and other features associated with the Jibril agent.
  version: 1.0.0
  license:
    name: Proprietary
    url: "https://www.listen.dev"
servers:
  - url: "https://core-staging.listen.dev"
    description: Staging server
  - url: "https://core-dev.listen.dev"
    description: Development server
  - url: "https://core.listen.dev"
    description: Production server
paths:
  /api/v1/events:
    put:
      security:
        - BearerAuth: []
      summary: Send the event to the server, this can result in update or create.
      operationId: ingestEvent
      requestBody:
        description: Event object that needs to be ingested
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "201":
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngestedEvent"
        "202":
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngestedEvent"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /api/v1/agents/{id}:
    get:
      security:
        - BearerAuth: []
      summary: Get agent by ID
      operationId: getAgentById
      parameters:
        - name: id
          in: path
          description: ID of agent to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Agent found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
        "404":
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
    delete:
      security:
        - BearerAuth: []
      summary: Delete agent by ID
      operationId: deleteAgentById
      parameters:
        - name: id
          in: path
          description: ID of agent to delete
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Agent deleted
        "404":
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
    patch:
      security:
        - BearerAuth: []
      summary: Update agent fields by ID
      operationId: updateAgentById
      parameters:
        - name: id
          in: path
          description: ID of agent to update
          required: true
          schema:
            type: string
      requestBody:
        description: Agent object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAgent"
      responses:
        "200":
          description: Agent updated successfully
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /api/v1/agents:
    post:
      security:
        - BearerAuth: []
      summary: Create a new agent
      operationId: createAgent
      requestBody:
        description: Agent object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAgent"
      responses:
        "201":
          description: Agent created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentCreated"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /healthz:
    get:
      security: []
      summary: Health check endpoint
      operationId: healthCheck
      responses:
        "200":
          description: Service is healthy
        "404":
          description: Service not found
        "500":
          description: Service is unhealthy
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: "invalid event kind"
    IngestedEvent:
      type: object
      properties:
        id:
          type: string
    Event:
      type: object
      required:
        - id
        - kind
      properties:
        id:
          type: string
        agent_id:
          type: string
        data:
          $ref: "#/components/schemas/Data"
        kind:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DroppedIP:
      type: object
      properties:
        ip_version:
          type: integer
        proto:
          type: string
        service_port:
          type: integer
        icmp:
          type: object
          properties:
            type:
              type: string
            code:
              type: string
        local:
          $ref: "#/components/schemas/Node"
        remote:
          $ref: "#/components/schemas/Node"
        properties:
          $ref: "#/components/schemas/Properties"
    GitHubContext:
      type: object
      required:
        - job
        - run_id
        - workflow
      properties:
        id:
          type: string
          description: This unique ID is generated by API, so it is possible to leave blank.
        action:
          type: string
        actor:
          type: string
        actor_id:
          type: string
        event_name:
          type: string
        job:
          type: string
        ref:
          type: string
        ref_name:
          type: string
        ref_protected:
          type: boolean
        ref_type:
          type: string
        repository:
          type: string
        repository_id:
          type: string
        repository_owner:
          type: string
        repository_owner_id:
          type: string
        run_attempt:
          type: string
        run_id:
          type: string
        run_number:
          type: string
        runner_arch:
          type: string
        runner_os:
          type: string
        server_url:
          type: string
        sha:
          type: string
        triggering_actor:
          type: string
        workflow:
          type: string
        workflow_ref:
          type: string
        workflow_sha:
          type: string
        workspace:
          type: string
        created_at:
          type: string
        update_at:
          type: string
    Data:
      type: object
      properties:
        dropped:
          $ref: "#/components/schemas/DroppedIP"
          nullable: true
        process:
          $ref: "#/components/schemas/Process"
          nullable: true
        parent:
          $ref: "#/components/schemas/Process"
          nullable: true
        flow:
          $ref: "#/components/schemas/Flow"
          nullable: true
        full_info:
          $ref: "#/components/schemas/FullInfo"
          nullable: true
        resolve:
          type: string
          nullable: true
        resolve_flow:
          $ref: "#/components/schemas/Flow"
          nullable: true
        head:
          $ref: "#/components/schemas/EventHead"
          nullable: true
        note:
          type: string
          nullable: true
    FullInfo:
      type: object
      properties:
        files:
          type: object
          additionalProperties:
            type: object
        flows:
          type: array
          items:
            $ref: "#/components/schemas/FlowSimple"
        ancestry:
          type: array
          items:
            $ref: "#/components/schemas/Process"
    FlowSimple:
      type: object
      properties:
        ip_version:
          type: integer
        proto:
          type: string
        service_port:
          type: integer
        icmp:
          $ref: "#/components/schemas/ICMP"
        local:
          $ref: "#/components/schemas/Node"
        remote:
          $ref: "#/components/schemas/Node"
        settings:
          $ref: "#/components/schemas/Settings"
    Flow:
      type: object
      properties:
        ip_version:
          type: integer
        proto:
          type: string
        service_port:
          type: integer
        icmp:
          $ref: "#/components/schemas/ICMP"
        local:
          $ref: "#/components/schemas/Node"
        remote:
          $ref: "#/components/schemas/Node"
        properties:
          $ref: "#/components/schemas/Properties"
        settings:
          $ref: "#/components/schemas/Settings"
    Settings:
      type: object
      properties:
        direction:
          type: string
        initiated_by:
          type: string
        status:
          type: string
        ended_by:
          type: string
    Properties:
      type: object
      properties:
        ingress:
          type: boolean
        egress:
          type: boolean
        incoming:
          type: boolean
        outgoing:
          type: boolean
        started:
          type: boolean
        ongoing:
          type: boolean
        ended:
          type: boolean
        terminator:
          type: boolean
        terminated:
          type: boolean
    ICMP:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
    Node:
      type: object
      properties:
        address:
          type: string
        name:
          type: string
        names:
          type: array
          items:
            type: string
        port:
          type: integer
    Process:
      type: object
      properties:
        start:
          type: string
        exit:
          type: string
        retcode:
          type: integer
        uid:
          type: integer
        pid:
          type: integer
        ppid:
          type: integer
        comm:
          type: string
        cmd:
          type: string
        exe:
          type: string
        args:
          type: string
        loader:
          type: string
        prev_exe:
          type: string
        prev_args:
          type: string
        prev_loader:
          type: string
    EventHead:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        format:
          type: string
        description:
          type: string
        documentation:
          type: string
        category:
          type: string
        mechanism:
          type: string
        method:
          type: string
        importance:
          type: string
    AgentKind:
      type: string
      enum:
        - github
        - kubernetes
    AgentLabels:
      type: object
      additionalProperties:
        type: string
    AgentKubernetesContext:
      type: object
      required:
        - cluster
        - namespace
      properties:
        cluster:
          type: string
        namespace:
          type: string
    Agent:
      type: object
      properties:
        id:
          type: string
        project_id:
          type: string
        os:
          type: string
        arch:
          type: string
        hostname:
          type: string
        version:
          type: string
        ip:
          type: string
        machine_id:
          type: string
        labels:
          $ref: "#/components/schemas/AgentLabels"
        kind:
          $ref: "#/components/schemas/AgentKind"
        github_context:
          $ref: "#/components/schemas/GitHubContext"
        kubernetes_context:
          $ref: "#/components/schemas/AgentKubernetesContext"
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateAgent:
      type: object
      required:
        - os
        - arch
        - hostname
        - version
        - ip
        - machine_id
        - kind
      properties:
        os:
          type: string
        arch:
          type: string
        hostname:
          type: string
        version:
          type: string
        ip:
          type: string
          format: ipv4
        machine_id:
          type: string
        labels:
          $ref: "#/components/schemas/AgentLabels"
        kind:
          $ref: "#/components/schemas/AgentKind"
        github_context:
          $ref: "#/components/schemas/GitHubContext"
        kubernetes_context:
          $ref: "#/components/schemas/AgentKubernetesContext"
    UpdateAgent:
      type: object
      properties:
        os:
          type: string
          nullable: true
        arch:
          type: string
          nullable: true
        hostname:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        ip:
          type: string
          format: ipv4
          nullable: true
        machine_id:
          type: string
          nullable: true
    AgentCreated:
      type: object
      required:
        - agent_token
        - agent_id
      properties:
        agent_token:
          type: string
        agent_id:
          type: string
